/*
* To change this license header, choose License Headers in Project Properties.
* To change this template file, choose Tools | Templates
* and open the template in the editor.
 */
package UI;

import com.sun.xml.internal.ws.util.StringUtils;
import java.awt.Color;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.util.ArrayList;
import javax.swing.JButton;
import javax.swing.JOptionPane;
import javax.swing.JRadioButton;
import javax.swing.Timer;

/**
 *
 * @author MuKCePa
 */
public class AppUI extends javax.swing.JFrame {

    /**
     * Creates new form AppUI
     */
    static int min, sec, minTemp, secTemp;
    Timer timer;
    boolean flag = true;
    boolean IsStopped = false;
    boolean IsReset = false;
    String taskCompleteMsg = "";
    String taskMsg = "";

    Model model;

    public AppUI() {
        initComponents();

        this.model = new Model();

        if (new File("tasks.ser").exists()) {
            try {
                FileInputStream fileIn = new FileInputStream("tasks.ser");
                ObjectInputStream in = new ObjectInputStream(fileIn);
                model = (Model) in.readObject();
                in.close();
                fileIn.close();
            } catch (IOException i) {
                i.printStackTrace();
                return;
            } catch (ClassNotFoundException c) {
                c.printStackTrace();
                return;
            }
        }

        //Fill min,sec
        for (int i = 0; i <= 59; i++) {
            if (i < 10) {
                cboxMin.addItem("0" + i);
            } else {
                cboxMin.addItem(Integer.toString(i));
            }
        }
        for (int i = 0; i <= 60; i++) {
            if (i < 10) {
                cboxSec.addItem("0" + i);
            } else {
                cboxSec.addItem(Integer.toString(i));
            }
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        radioBtnGroup = new javax.swing.ButtonGroup();
        btnStart = new javax.swing.JButton();
        textTask = new javax.swing.JTextField();
        textMsg = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        btnStop = new javax.swing.JButton();
        lblMin = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        lblSec = new javax.swing.JLabel();
        cboxSec = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        cboxMin = new javax.swing.JComboBox<>();
        btnReset = new javax.swing.JButton();
        lblPriority = new javax.swing.JLabel();
        btnRadioH = new javax.swing.JRadioButton();
        btnRadioL = new javax.swing.JRadioButton();
        btnRadioM = new javax.swing.JRadioButton();
        btnHistory = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("RemindMe");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        btnStart.setBackground(new java.awt.Color(0, 153, 51));
        btnStart.setFont(new java.awt.Font("Tahoma", 2, 12)); // NOI18N
        btnStart.setIcon(new javax.swing.ImageIcon(getClass().getResource("/UI/chronometer.png"))); // NOI18N
        btnStart.setText("START");
        btnStart.setToolTipText("Start timer");
        btnStart.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnStartActionPerformed(evt);
            }
        });

        textTask.setText("Task description");
        textTask.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textTaskActionPerformed(evt);
            }
        });

        textMsg.setText("Task message");

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel1.setText("MESSAGE");

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel2.setText("TASK");

        btnStop.setBackground(new java.awt.Color(255, 0, 51));
        btnStop.setFont(new java.awt.Font("Tahoma", 2, 12)); // NOI18N
        btnStop.setText("STOP");
        btnStop.setToolTipText("Stop timer");
        btnStop.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnStopActionPerformed(evt);
            }
        });

        lblMin.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        lblMin.setText("00");

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel5.setText(":");

        lblSec.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        lblSec.setText("00");

        cboxSec.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        cboxSec.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboxSecActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel3.setText("SET TIMER");

        cboxMin.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        cboxMin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboxMinActionPerformed(evt);
            }
        });

        btnReset.setBackground(new java.awt.Color(255, 255, 0));
        btnReset.setFont(new java.awt.Font("Tahoma", 2, 12)); // NOI18N
        btnReset.setIcon(new javax.swing.ImageIcon(getClass().getResource("/UI/chronometer.png"))); // NOI18N
        btnReset.setText("RESET");
        btnReset.setToolTipText("Reset timer");
        btnReset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnResetActionPerformed(evt);
            }
        });

        lblPriority.setText("PRIORITY");

        radioBtnGroup.add(btnRadioH);
        btnRadioH.setText("HIGH");

        radioBtnGroup.add(btnRadioL);
        btnRadioL.setSelected(true);
        btnRadioL.setText("LOW");

        radioBtnGroup.add(btnRadioM);
        btnRadioM.setText("MEDIUM");

        btnHistory.setIcon(new javax.swing.ImageIcon(getClass().getResource("/UI/history.png"))); // NOI18N
        btnHistory.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHistoryActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblPriority)
                        .addGap(18, 18, 18)
                        .addComponent(btnRadioH)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnRadioM)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnRadioL))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnStart)
                        .addGap(18, 18, 18)
                        .addComponent(btnReset)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnStop, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(textMsg)
                    .addComponent(textTask))
                .addGap(17, 17, 17))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(94, 94, 94))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(60, 60, 60))))
            .addGroup(layout.createSequentialGroup()
                .addGap(131, 131, 131)
                .addComponent(jLabel3)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(88, 88, 88)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lblMin)
                    .addComponent(cboxMin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(28, 28, 28)
                .addComponent(jLabel5)
                .addGap(37, 37, 37)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cboxSec, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblSec))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnHistory, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(lblMin)
                        .addComponent(jLabel5)
                        .addComponent(lblSec))
                    .addComponent(btnHistory, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cboxSec, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cboxMin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(textTask, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblPriority, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnRadioH)
                    .addComponent(btnRadioL)
                    .addComponent(btnRadioM, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(11, 11, 11)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(textMsg, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnStart, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnStop, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnReset, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnStartActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnStartActionPerformed
        taskCompleteMsg = textMsg.getText();
        taskMsg = textTask.getText();
        
        String selectedPriority = GroupButtonUtils.getSelectedButtonText(radioBtnGroup).toLowerCase();
        Integer priority = selectedPriority.equals("high") ? 1 : selectedPriority.equals("medium") ? 2 : 3;
        
        Task task = new Task(taskMsg, taskCompleteMsg, priority, min, sec);

        timer = new Timer(1000, new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent ae) {
                lblMin.setForeground(Color.BLACK);
                lblSec.setForeground(Color.BLACK);

                if (IsStopped) {
                    min = minTemp;
                    sec = secTemp;
                    IsStopped = false;
                }

                if (sec == 0) {
                    sec = 60;
                    min--;
                }

                if (min == 0) {
                    lblMin.setForeground(Color.RED);
                    lblSec.setForeground(Color.RED);
                }

                if (min < 0) {
                    JOptionPane.showMessageDialog(rootPane, "Task Completed!\n" + taskCompleteMsg);
                    min = 0;
                    sec = 0;
                    timer.stop();
                    btnResetActionPerformed(null);
                    
                    task.setIsReminded(true);
                    saveTasks();
                } else {
                    sec--;

                    if (sec < 10) {
                        lblSec.setText("0" + sec);
                        flag = false;
                    }
                    if (min < 10) {
                        lblMin.setText("0" + min);

                        if (sec < 10) {
                            lblSec.setText("0" + sec);
                        } else {
                            lblSec.setText("" + sec);
                        }

                        flag = false;
                    }
                }
                if (flag) {
                    lblMin.setText("" + min);
                    lblMin.setText("" + sec);
                }
            }
        });

        model.add(task);
        saveTasks();
        
        timer.start();
    }//GEN-LAST:event_btnStartActionPerformed

    private void saveTasks() {
        try {
            FileOutputStream fileOut = new FileOutputStream("tasks.ser");
            ObjectOutputStream out = new ObjectOutputStream(fileOut);
            out.writeObject(model);
            out.close();
            fileOut.close();
        } catch (IOException i) {
            i.printStackTrace();
        }
    }
    
    private void loadTasks() {        
        try {
            FileInputStream fileIn = new FileInputStream("tasks.ser");
            ObjectInputStream in = new ObjectInputStream(fileIn);
            model = (Model)in.readObject();
            in.close();
            fileIn.close();
        } catch (IOException i) {
            i.printStackTrace();
            return;
        } catch (ClassNotFoundException c) {
            c.printStackTrace();
            return;
        }
    }

    private void textTaskActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textTaskActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_textTaskActionPerformed

    private void btnStopActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnStopActionPerformed
        minTemp = min;
        secTemp = sec;
        IsStopped = true;
        timer.stop();
    }//GEN-LAST:event_btnStopActionPerformed

    private void cboxSecActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboxSecActionPerformed
        lblSec.setText("" + cboxSec.getSelectedItem());
        sec = Integer.parseInt(lblSec.getText());
    }//GEN-LAST:event_cboxSecActionPerformed

    private void cboxMinActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboxMinActionPerformed
        lblMin.setText("" + cboxMin.getSelectedItem());
        min = Integer.parseInt(lblMin.getText());
    }//GEN-LAST:event_cboxMinActionPerformed

    private void btnResetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnResetActionPerformed
        lblMin.setForeground(Color.BLACK);
        lblSec.setForeground(Color.BLACK);
        lblMin.setText("00");
        lblSec.setText("00");
        min = 0;
        sec = 0;
        timer.stop();
    }//GEN-LAST:event_btnResetActionPerformed

    private void btnHistoryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHistoryActionPerformed
        HistoryForm historyForm = new HistoryForm(model);
        historyForm.setVisible(true);
    }//GEN-LAST:event_btnHistoryActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        loadTasks();
    }//GEN-LAST:event_formWindowOpened

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
        * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AppUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AppUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AppUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AppUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AppUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnHistory;
    private javax.swing.JRadioButton btnRadioH;
    private javax.swing.JRadioButton btnRadioL;
    private javax.swing.JRadioButton btnRadioM;
    private javax.swing.JButton btnReset;
    private javax.swing.JButton btnStart;
    private javax.swing.JButton btnStop;
    private javax.swing.JComboBox<String> cboxMin;
    private javax.swing.JComboBox<String> cboxSec;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel lblMin;
    private javax.swing.JLabel lblPriority;
    private javax.swing.JLabel lblSec;
    private javax.swing.ButtonGroup radioBtnGroup;
    private javax.swing.JTextField textMsg;
    private javax.swing.JTextField textTask;
    // End of variables declaration//GEN-END:variables
}
